name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  ubuntu-22-cmake-cpu-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=OFF -DCMAKE_BUILD_TYPE=Release
          ninja -j $(nproc)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: linux_cpu_release.zip
          path: build/libgodot_llm.linux.release.x86_64.so

  ubuntu-22-cmake-cpu-debug:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=OFF -DCMAKE_BUILD_TYPE=Debug
          ninja -j $(nproc)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: linux_cpu_debug.zip
          path: build/libgodot_llm.linux.debug.x86_64.so

  ubuntu-22-cmake-vulkan-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libvulkan-dev ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=ON -DCMAKE_BUILD_TYPE=Release
          ninja -j $(nproc)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: linux_vulkan_release.zip
          path: build/libgodot_llm.linux.release.x86_64.so

  ubuntu-22-cmake-vulkan-debug:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libvulkan-dev ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=ON -DCMAKE_BUILD_TYPE=Debug
          ninja -j $(nproc)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: linux_vulkan_debug.zip
          path: build/libgodot_llm.linux.debug.x86_64.so
  
  windows-latest-cmake-cpu-release:
    runs-on: windows-latest
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive
      
      - name: Scoop dependencies
        shell: powershell
        run: |
          irm get.scoop.sh | iex
          scoop install ninja llvm
          Add-Content $env:GITHUB_PATH "$HOME\scoop\apps\llvm\current\bin"
          Add-Content $env:GITHUB_PATH "$HOME\scoop\shims"

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          ls "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cmd
          ${{ '"C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" && cmake .. -GNinja -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=OFF -DCMAKE_BUILD_TYPE=Release' }}
          ninja -j ${env:NUMBER_OF_PROCESSORS}

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: windows_cpu_release.zip
          path: build/libgodot_llm.windows.release.amd64.dll