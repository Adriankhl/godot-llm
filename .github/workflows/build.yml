name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  ubuntu-22-cmake-cpu-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=OFF -DCMAKE_BUILD_TYPE=Release
          ninja -j $(nproc)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: linux_cpu_release
          path: build/libgodot_llm.linux.release.x86_64.so

  ubuntu-22-cmake-cpu-debug:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=OFF -DCMAKE_BUILD_TYPE=Debug
          ninja -j $(nproc)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: linux_cpu_debug
          path: build/libgodot_llm.linux.debug.x86_64.so

  ubuntu-22-cmake-vulkan-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libvulkan-dev ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=ON -DCMAKE_BUILD_TYPE=Release
          ninja -j $(nproc)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: linux_vulkan_release
          path: build/libgodot_llm.linux.release.x86_64.so

  ubuntu-22-cmake-vulkan-debug:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libvulkan-dev ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=ON -DCMAKE_BUILD_TYPE=Debug
          ninja -j $(nproc)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: linux_vulkan_debug
          path: build/libgodot_llm.linux.debug.x86_64.so
  
  windows-latest-cmake-cpu-release:
    runs-on: windows-latest
    steps:
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive
      
      - name: Scoop dependencies
        run: |
          irm get.scoop.sh | iex
          scoop install ninja llvm
          Add-Content $env:GITHUB_PATH "$HOME\scoop\apps\llvm\current\bin"
          Add-Content $env:GITHUB_PATH "$HOME\scoop\shims"

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=OFF -DCMAKE_BUILD_TYPE=Release
          ninja -j ${env:NUMBER_OF_PROCESSORS}

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: windows_cpu_release
          path: build/libgodot_llm.windows.release.amd64.dll

  windows-latest-cmake-cpu-debug:
    runs-on: windows-latest
    steps:
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive
      
      - name: Scoop dependencies
        run: |
          irm get.scoop.sh | iex
          scoop install ninja llvm
          Add-Content $env:GITHUB_PATH "$HOME\scoop\apps\llvm\current\bin"
          Add-Content $env:GITHUB_PATH "$HOME\scoop\shims"

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=OFF -DCMAKE_BUILD_TYPE=Debug
          ninja -j ${env:NUMBER_OF_PROCESSORS}

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: windows_cpu_debug
          path: build/libgodot_llm.windows.debug.amd64.dll

  windows-latest-cmake-vulkan-release:
    runs-on: windows-latest

    env:
      VULKAN_VERSION: 1.3.283.0

    steps:
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive
      
      - name: Scoop dependencies
        run: |
          irm get.scoop.sh | iex
          scoop install ninja llvm
          Add-Content $env:GITHUB_PATH "$HOME\scoop\apps\llvm\current\bin"
          Add-Content $env:GITHUB_PATH "$HOME\scoop\shims"
      
      - name: Install Vulkan SDK
        id: get_vulkan
        run: |
          curl.exe -o $env:RUNNER_TEMP/VulkanSDK-Installer.exe -L "https://sdk.lunarg.com/sdk/download/${env:VULKAN_VERSION}/windows/VulkanSDK-${env:VULKAN_VERSION}-Installer.exe"
          & "$env:RUNNER_TEMP\VulkanSDK-Installer.exe" --accept-licenses --default-answer --confirm-command install
          Add-Content $env:GITHUB_ENV "VULKAN_SDK=C:\VulkanSDK\${env:VULKAN_VERSION}"
          Add-Content $env:GITHUB_PATH "C:\VulkanSDK\${env:VULKAN_VERSION}\bin"

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=ON -DCMAKE_BUILD_TYPE=Release
          ninja -j ${env:NUMBER_OF_PROCESSORS}

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: windows_vulkan_release
          path: build/libgodot_llm.windows.release.amd64.dll

  windows-latest-cmake-vulkan-debug:
    runs-on: windows-latest

    env:
      VULKAN_VERSION: 1.3.283.0

    steps:
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive
      
      - name: Scoop dependencies
        run: |
          irm get.scoop.sh | iex
          scoop install ninja llvm
          Add-Content $env:GITHUB_PATH "$HOME\scoop\apps\llvm\current\bin"
          Add-Content $env:GITHUB_PATH "$HOME\scoop\shims"
      
      - name: Install Vulkan SDK
        id: get_vulkan
        run: |
          curl.exe -o $env:RUNNER_TEMP/VulkanSDK-Installer.exe -L "https://sdk.lunarg.com/sdk/download/${env:VULKAN_VERSION}/windows/VulkanSDK-${env:VULKAN_VERSION}-Installer.exe"
          & "$env:RUNNER_TEMP\VulkanSDK-Installer.exe" --accept-licenses --default-answer --confirm-command install
          Add-Content $env:GITHUB_ENV "VULKAN_SDK=C:\VulkanSDK\${env:VULKAN_VERSION}"
          Add-Content $env:GITHUB_PATH "C:\VulkanSDK\${env:VULKAN_VERSION}\bin"

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DLLAMA_NATIVE=OFF -DLLAMA_VULKAN=ON -DCMAKE_BUILD_TYPE=Debug
          ninja -j ${env:NUMBER_OF_PROCESSORS}

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: windows_vulkan_debug
          path: build/libgodot_llm.windows.debug.amd64.dll

  android-cmake-cpu-release:
    runs-on: ubuntu-22.04

    steps:
      - uses: nttld/setup-ndk@v1
        id: setup-ndk 
        with:
         ndk-version: r23c
         link-to-sdk: true

      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-23 -DCMAKE_C_FLAGS="-mcpu=generic" -DCMAKE_CXX_FLAGS="-mcpu=generic" -DCMAKE_BUILD_TYPE=Release
          ninja -j $(nproc)
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: android_cpu_release
          path: build/libgodot_llm.android.release.aarch64.so


  android-cmake-cpu-debug:
    runs-on: ubuntu-22.04

    steps:
      - uses: nttld/setup-ndk@v1
        id: setup-ndk 
        with:
         ndk-version: r23c
         link-to-sdk: true

      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential ninja-build

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-23 -DCMAKE_C_FLAGS="-mcpu=generic" -DCMAKE_CXX_FLAGS="-mcpu=generic" -DCMAKE_BUILD_TYPE=Debug
          ninja -j $(nproc)
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: android_cpu_debug
          path: build/libgodot_llm.android.debug.aarch64.so
  
  macos-latest-cmake-cpu-release:
    runs-on: macos-latest
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          brew update

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -DLLAMA_NATIVE=OFF -DLLAMA_METAL=OFF -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release -j $(sysctl -n hw.logicalcpu)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: macos_cpu_release
          path: build/libgodot_llm.darwin.release.universal.dylib

  macos-latest-cmake-cpu-debug:
    runs-on: macos-latest
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          brew update

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -DLLAMA_NATIVE=OFF -DLLAMA_METAL=OFF -DCMAKE_BUILD_TYPE=Debug
          cmake --build . --config Debug -j $(sysctl -n hw.logicalcpu)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: macos_cpu_debug
          path: build/libgodot_llm.darwin.debug.universal.dylib

  macos-latest-cmake-metal-release:
    runs-on: macos-latest
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          brew update

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -DLLAMA_NATIVE=OFF -DLLAMA_METAL=ON -DLLAMA_METAL_EMBED_LIBRARY=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release -j $(sysctl -n hw.logicalcpu)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: macos_metal_release
          path: build/libgodot_llm.darwin.release.universal.dylib

  macos-latest-cmake-metal-debug:
    runs-on: macos-latest
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Clone submodule
        id: clone_submodule
        run: |
          git submodule update --init --recursive

      - name: Dependencies
        id: depends
        run: |
          brew update

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. -DLLAMA_NATIVE=OFF -DLLAMA_METAL=ON -DLLAMA_METAL_EMBED_LIBRARY=ON -DCMAKE_BUILD_TYPE=Debug
          cmake --build . --config Debug -j $(sysctl -n hw.logicalcpu)

      - name: Archive library
        uses: actions/upload-artifact@v4
        with:
          name: macos_metal_debug
          path: build/libgodot_llm.darwin.debug.universal.dylib

  archive-other-files:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Archive files
        uses: actions/upload-artifact@v4
        with:
          name: godot_llm.gdextension
          path: godot_llm.gdextension
    
  package-addons:
    needs:
      [
        ubuntu-22-cmake-cpu-release,
        ubuntu-22-cmake-cpu-debug,
        ubuntu-22-cmake-vulkan-release,
        ubuntu-22-cmake-vulkan-debug,
        windows-latest-cmake-cpu-release,
        windows-latest-cmake-cpu-debug,
        windows-latest-cmake-vulkan-release,
        windows-latest-cmake-vulkan-debug,
        android-cmake-cpu-release,
        android-cmake-cpu-debug,
        macos-latest-cmake-cpu-release,
        macos-latest-cmake-cpu-debug,
        macos-latest-cmake-metal-release,
        macos-latest-cmake-metal-debug,
        archive-other-files
      ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Copy to godot_llm_cpu
        run: |
          mkdir -p godot_llm_cpu/addons/godot_llm/bin
          cp ./android_cpu_debug/libgodot_llm.android.debug.aarch64.so ./godot_llm_cpu/addons/godot_llm/bin
          cp ./android_cpu_release/libgodot_llm.android.release.aarch64.so ./godot_llm_cpu/addons/godot_llm/bin
          cp ./linux_cpu_debug/libgodot_llm.linux.debug.x86_64.so ./godot_llm_cpu/addons/godot_llm/bin
          cp ./linux_cpu_release/libgodot_llm.linux.release.x86_64.so ./godot_llm_cpu/addons/godot_llm/bin
          cp ./macos_cpu_debug/libgodot_llm.darwin.debug.universal.dylib ./godot_llm_cpu/addons/godot_llm/bin
          cp ./macos_cpu_release/libgodot_llm.darwin.release.universal.dylib ./godot_llm_cpu/addons/godot_llm/bin
          cp ./windows_cpu_debug/libgodot_llm.windows.debug.amd64.dll ./godot_llm_cpu/addons/godot_llm/bin
          cp ./windows_cpu_release/libgodot_llm.windows.release.amd64.dll ./godot_llm_cpu/addons/godot_llm/bin
          cp ./godot_llm.gdextension/godot_llm.gdextension ./godot_llm_cpu/addons/godot_llm

      - name: Copy to godot_llm_gpu
        run: |
          mkdir -p godot_llm_gpu/addons/godot_llm/bin
          cp ./android_cpu_debug/libgodot_llm.android.debug.aarch64.so ./godot_llm_gpu/addons/godot_llm/bin
          cp ./android_cpu_release/libgodot_llm.android.release.aarch64.so ./godot_llm_gpu/addons/godot_llm/bin
          cp ./linux_vulkan_debug/libgodot_llm.linux.debug.x86_64.so ./godot_llm_gpu/addons/godot_llm/bin
          cp ./linux_vulkan_release/libgodot_llm.linux.release.x86_64.so ./godot_llm_gpu/addons/godot_llm/bin
          cp ./macos_metal_debug/libgodot_llm.darwin.debug.universal.dylib ./godot_llm_gpu/addons/godot_llm/bin
          cp ./macos_metal_release/libgodot_llm.darwin.release.universal.dylib ./godot_llm_gpu/addons/godot_llm/bin
          cp ./windows_vulkan_debug/libgodot_llm.windows.debug.amd64.dll ./godot_llm_gpu/addons/godot_llm/bin
          cp ./windows_vulkan_release/libgodot_llm.windows.release.amd64.dll ./godot_llm_gpu/addons/godot_llm/bin
          cp ./godot_llm.gdextension/godot_llm.gdextension ./godot_llm_gpu/addons/godot_llm

      - name: Archive godot_llm_cpu
        uses: actions/upload-artifact@v4
        with:
          name: godot_llm_cpu
          path: godot_llm_cpu

      - name: Archive godot_llm_gpu
        uses: actions/upload-artifact@v4
        with:
          name: godot_llm_gpu
          path: godot_llm_gpu